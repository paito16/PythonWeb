name: CI/CD

on:
    push:
        branches:
            - main

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Log in to Dockerhub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_USER }}
                password: ${{ secrets.DOCKER_PASS }}

            - name: Build and push Docker image
              uses: docker/build-push-action@v3
              with:
                context: .
                push: true
                tags: paito16/helloworldpython:latest

            - name: Deploy to EC2
              uses: appleboy/ssh-action@v0.1.6
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ${{ secrets.EC2_SSH_USER }}
                key: ${{ secrets.EC2_SSH_KEY }}
                script: |
                  # Actualiza el sistema e instala Docker en sistemas basados en apt
                  sudo apt-get update -y
                  sudo apt-get install -y docker.io

                  # Inicia y habilita Docker
                  sudo systemctl start docker
                  sudo systemctl enable docker

                  # Detiene cualquier contenedor que esté usando el puerto 5000
                  if sudo lsof -i :5000; then
                    echo "El puerto 5000 está en uso. Deteniendo el servicio asociado..."
                    sudo docker ps -q --filter "publish=5000" | grep -q . && \
                    sudo docker stop $(sudo docker ps -q --filter "publish=5000") && \
                    sudo docker rm $(sudo docker ps -q --filter "publish=5000")
                  fi

                  # Elimina cualquier contenedor anterior llamado "HelloWorld"
                  if [ "$(sudo docker ps -aq -f name=HelloWorld)" ]; then
                    echo "Eliminando contenedor existente..."
                    sudo docker stop HelloWorld || true
                    sudo docker rm HelloWorld || true
                  fi

                  # Descarga la última imagen desde Docker Hub
                  sudo docker pull paito16/helloworldpython:latest

                  # Inicia un nuevo contenedor con la imagen descargada
                  sudo docker run -d -p 5000:5000 --name HelloWorld paito16/helloworldpython:latest

                  # Lista los contenedores activos para verificar
                  sudo docker ps